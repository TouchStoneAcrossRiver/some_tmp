// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

#ifndef PROTOBUF_demo_2eproto__INCLUDED
#define PROTOBUF_demo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace protocol {
namespace recsys {
namespace deldup {
class RecItem;
class RecItemDefaultTypeInternal;
extern RecItemDefaultTypeInternal _RecItem_default_instance_;
class RecItemArr;
class RecItemArrDefaultTypeInternal;
extern RecItemArrDefaultTypeInternal _RecItemArr_default_instance_;
}  // namespace deldup
}  // namespace recsys
}  // namespace protocol

namespace protocol {
namespace recsys {
namespace deldup {

namespace protobuf_demo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_demo_2eproto

// ===================================================================

class RecItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.recsys.deldup.RecItem) */ {
 public:
  RecItem();
  virtual ~RecItem();

  RecItem(const RecItem& from);

  inline RecItem& operator=(const RecItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecItem& default_instance();

  static inline const RecItem* internal_default_instance() {
    return reinterpret_cast<const RecItem*>(
               &_RecItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RecItem* other);

  // implements Message ----------------------------------------------

  inline RecItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RecItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecItem& from);
  void MergeFrom(const RecItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string country_code = 5;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 5;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // string distance = 6;
  void clear_distance();
  static const int kDistanceFieldNumber = 6;
  const ::std::string& distance() const;
  void set_distance(const ::std::string& value);
  #if LANG_CXX11
  void set_distance(::std::string&& value);
  #endif
  void set_distance(const char* value);
  void set_distance(const char* value, size_t size);
  ::std::string* mutable_distance();
  ::std::string* release_distance();
  void set_allocated_distance(::std::string* distance);

  // uint64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint64 videoid = 3;
  void clear_videoid();
  static const int kVideoidFieldNumber = 3;
  ::google::protobuf::uint64 videoid() const;
  void set_videoid(::google::protobuf::uint64 value);

  // double score = 4;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  double score() const;
  void set_score(double value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.recsys.deldup.RecItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr distance_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 videoid_;
  double score_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_demo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecItemArr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.recsys.deldup.RecItemArr) */ {
 public:
  RecItemArr();
  virtual ~RecItemArr();

  RecItemArr(const RecItemArr& from);

  inline RecItemArr& operator=(const RecItemArr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecItemArr& default_instance();

  static inline const RecItemArr* internal_default_instance() {
    return reinterpret_cast<const RecItemArr*>(
               &_RecItemArr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RecItemArr* other);

  // implements Message ----------------------------------------------

  inline RecItemArr* New() const PROTOBUF_FINAL { return New(NULL); }

  RecItemArr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecItemArr& from);
  void MergeFrom(const RecItemArr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecItemArr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.recsys.deldup.RecItem recitem = 1;
  int recitem_size() const;
  void clear_recitem();
  static const int kRecitemFieldNumber = 1;
  const ::protocol::recsys::deldup::RecItem& recitem(int index) const;
  ::protocol::recsys::deldup::RecItem* mutable_recitem(int index);
  ::protocol::recsys::deldup::RecItem* add_recitem();
  ::google::protobuf::RepeatedPtrField< ::protocol::recsys::deldup::RecItem >*
      mutable_recitem();
  const ::google::protobuf::RepeatedPtrField< ::protocol::recsys::deldup::RecItem >&
      recitem() const;

  // @@protoc_insertion_point(class_scope:protocol.recsys.deldup.RecItemArr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::recsys::deldup::RecItem > recitem_;
  mutable int _cached_size_;
  friend struct protobuf_demo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RecItem

// uint64 timestamp = 1;
inline void RecItem::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RecItem::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.timestamp)
  return timestamp_;
}
inline void RecItem::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.timestamp)
}

// uint32 type = 2;
inline void RecItem::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 RecItem::type() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.type)
  return type_;
}
inline void RecItem::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.type)
}

// uint64 videoid = 3;
inline void RecItem::clear_videoid() {
  videoid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RecItem::videoid() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.videoid)
  return videoid_;
}
inline void RecItem::set_videoid(::google::protobuf::uint64 value) {
  
  videoid_ = value;
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.videoid)
}

// double score = 4;
inline void RecItem::clear_score() {
  score_ = 0;
}
inline double RecItem::score() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.score)
  return score_;
}
inline void RecItem::set_score(double value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.score)
}

// string country_code = 5;
inline void RecItem::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecItem::country_code() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.country_code)
  return country_code_.GetNoArena();
}
inline void RecItem::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.country_code)
}
#if LANG_CXX11
inline void RecItem::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.recsys.deldup.RecItem.country_code)
}
#endif
inline void RecItem::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.recsys.deldup.RecItem.country_code)
}
inline void RecItem::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.recsys.deldup.RecItem.country_code)
}
inline ::std::string* RecItem::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:protocol.recsys.deldup.RecItem.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecItem::release_country_code() {
  // @@protoc_insertion_point(field_release:protocol.recsys.deldup.RecItem.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecItem::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:protocol.recsys.deldup.RecItem.country_code)
}

// string distance = 6;
inline void RecItem::clear_distance() {
  distance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecItem::distance() const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItem.distance)
  return distance_.GetNoArena();
}
inline void RecItem::set_distance(const ::std::string& value) {
  
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.recsys.deldup.RecItem.distance)
}
#if LANG_CXX11
inline void RecItem::set_distance(::std::string&& value) {
  
  distance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.recsys.deldup.RecItem.distance)
}
#endif
inline void RecItem::set_distance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.recsys.deldup.RecItem.distance)
}
inline void RecItem::set_distance(const char* value, size_t size) {
  
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.recsys.deldup.RecItem.distance)
}
inline ::std::string* RecItem::mutable_distance() {
  
  // @@protoc_insertion_point(field_mutable:protocol.recsys.deldup.RecItem.distance)
  return distance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecItem::release_distance() {
  // @@protoc_insertion_point(field_release:protocol.recsys.deldup.RecItem.distance)
  
  return distance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecItem::set_allocated_distance(::std::string* distance) {
  if (distance != NULL) {
    
  } else {
    
  }
  distance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), distance);
  // @@protoc_insertion_point(field_set_allocated:protocol.recsys.deldup.RecItem.distance)
}

// -------------------------------------------------------------------

// RecItemArr

// repeated .protocol.recsys.deldup.RecItem recitem = 1;
inline int RecItemArr::recitem_size() const {
  return recitem_.size();
}
inline void RecItemArr::clear_recitem() {
  recitem_.Clear();
}
inline const ::protocol::recsys::deldup::RecItem& RecItemArr::recitem(int index) const {
  // @@protoc_insertion_point(field_get:protocol.recsys.deldup.RecItemArr.recitem)
  return recitem_.Get(index);
}
inline ::protocol::recsys::deldup::RecItem* RecItemArr::mutable_recitem(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.recsys.deldup.RecItemArr.recitem)
  return recitem_.Mutable(index);
}
inline ::protocol::recsys::deldup::RecItem* RecItemArr::add_recitem() {
  // @@protoc_insertion_point(field_add:protocol.recsys.deldup.RecItemArr.recitem)
  return recitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::recsys::deldup::RecItem >*
RecItemArr::mutable_recitem() {
  // @@protoc_insertion_point(field_mutable_list:protocol.recsys.deldup.RecItemArr.recitem)
  return &recitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::recsys::deldup::RecItem >&
RecItemArr::recitem() const {
  // @@protoc_insertion_point(field_list:protocol.recsys.deldup.RecItemArr.recitem)
  return recitem_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace deldup
}  // namespace recsys
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_demo_2eproto__INCLUDED
